{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\firstweb\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaArrowLeft, FaStar, FaThumbsUp, FaClock, FaFire, FaFilter, FaHeart, FaUser, FaTimes, FaPlayCircle, FaLink, FaCalendarAlt, FaTv, FaSearch } from \"react-icons/fa\";\nimport MoviePoster from './MoviePoster';\nimport '../App.css';\n\n// TMDB API key and URLs\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = '3fd2be6f0c70a2a598f084ddfb75487c'; // This is a demo key for testing\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst BACKDROP_URL = 'https://image.tmdb.org/t/p/original';\nconst MovieList = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // State for movies\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [latestMovies, setLatestMovies] = useState([]);\n  const [topRatedMovies, setTopRatedMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Search functionality\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Cast information cache\n  const [castInfo, setCastInfo] = useState({});\n\n  // Movie detail popup state\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [watchProviders, setWatchProviders] = useState(null);\n\n  // User preferences for recommendations\n  const [userPreferences, setUserPreferences] = useState({\n    favoriteGenres: [],\n    likedMovies: []\n  });\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(0); // 0 means all genres\n  const [genres, setGenres] = useState([]);\n  const [activeTab, setActiveTab] = useState('popular');\n\n  // Search for movies\n  const searchMovies = async query => {\n    if (!query.trim()) {\n      setSearchResults([]);\n      setIsSearching(false);\n      return;\n    }\n    setIsSearching(true);\n    try {\n      const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${encodeURIComponent(query)}&page=1&include_adult=false`);\n      const data = await response.json();\n\n      // Transform search results\n      const transformedResults = transformMovieData(data.results);\n      setSearchResults(transformedResults);\n\n      // Fetch cast for search results\n      transformedResults.forEach(movie => {\n        if (!castInfo[movie.id]) {\n          fetchMovieCast(movie.id);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error searching movies:\", error);\n      setSearchResults([]);\n    }\n  };\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchQuery(value);\n\n    // Debounce search to avoid too many requests\n    const timeoutId = setTimeout(() => {\n      searchMovies(value);\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  };\n\n  // Clear search\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSearchResults([]);\n    setIsSearching(false);\n  };\n\n  // Fetch genres\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n        const data = await response.json();\n        setGenres([{\n          id: 0,\n          name: 'All'\n        }, ...data.genres]);\n      } catch (err) {\n        console.error('Error fetching genres:', err);\n      }\n    };\n    fetchGenres();\n  }, []);\n\n  // Transform movie data to our format\n  const transformMovieData = movies => {\n    return movies.map(movie => ({\n      id: movie.id,\n      title: movie.title,\n      year: movie.release_date ? new Date(movie.release_date).getFullYear() : 'Unknown',\n      rating: movie.vote_average,\n      genre: movie.genre_ids,\n      poster: movie.poster_path ? `${IMG_URL}${movie.poster_path}` : null,\n      overview: movie.overview,\n      release_date: movie.release_date\n    }));\n  };\n\n  // Fetch cast for a movie\n  const fetchMovieCast = async movieId => {\n    // Check if we already have the cast information\n    if (castInfo[movieId]) return;\n    try {\n      const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n      const data = await response.json();\n\n      // Get top 3 cast members\n      const cast = data.cast.slice(0, 3).map(actor => ({\n        id: actor.id,\n        name: actor.name,\n        character: actor.character,\n        profile: actor.profile_path ? `${IMG_URL}${actor.profile_path}` : null\n      }));\n\n      // Update cast info state\n      setCastInfo(prev => ({\n        ...prev,\n        [movieId]: cast\n      }));\n    } catch (error) {\n      console.error(`Error fetching cast for movie ${movieId}:`, error);\n    }\n  };\n\n  // Fetch detailed movie information\n  const fetchMovieDetails = async movieId => {\n    try {\n      const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&append_to_response=videos,similar`);\n      const data = await response.json();\n      setMovieDetails(data);\n\n      // Also fetch watch providers\n      fetchWatchProviders(movieId);\n    } catch (error) {\n      console.error(`Error fetching movie details for movie ${movieId}:`, error);\n    }\n  };\n\n  // Fetch watch providers for a movie\n  const fetchWatchProviders = async movieId => {\n    try {\n      const response = await fetch(`${BASE_URL}/movie/${movieId}/watch/providers?api_key=${API_KEY}`);\n      const data = await response.json();\n\n      // Get US providers or fall back to GB if US isn't available\n      const providers = data.results.US || data.results.GB || {};\n      setWatchProviders(providers);\n    } catch (error) {\n      console.error(`Error fetching watch providers for movie ${movieId}:`, error);\n      setWatchProviders(null);\n    }\n  };\n\n  // Open movie details popup\n  const openMovieDetails = movie => {\n    setSelectedMovie(movie);\n    fetchMovieDetails(movie.id);\n\n    // If we don't have cast info for this movie yet, fetch it\n    if (!castInfo[movie.id]) {\n      fetchMovieCast(movie.id);\n    }\n\n    // Prevent body scrolling when modal is open\n    document.body.style.overflow = 'hidden';\n  };\n\n  // Close movie details popup\n  const closeMovieDetails = () => {\n    setSelectedMovie(null);\n    setMovieDetails(null);\n    setWatchProviders(null);\n\n    // Re-enable body scrolling\n    document.body.style.overflow = 'auto';\n  };\n\n  // Fetch popular movies\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        // Popular movies\n        let popularUrl = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n        if (selectedGenre !== 0) {\n          popularUrl = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=${selectedGenre}&sort_by=popularity.desc`;\n        }\n        const popularResponse = await fetch(popularUrl);\n        const popularData = await popularResponse.json();\n\n        // Latest movies (now playing)\n        let latestUrl = `${BASE_URL}/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`;\n        if (selectedGenre !== 0) {\n          latestUrl = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=${selectedGenre}&sort_by=release_date.desc`;\n        }\n        const latestResponse = await fetch(latestUrl);\n        const latestData = await latestResponse.json();\n\n        // Top rated movies\n        let topRatedUrl = `${BASE_URL}/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`;\n        if (selectedGenre !== 0) {\n          topRatedUrl = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=${selectedGenre}&sort_by=vote_average.desc&vote_count.gte=1000`;\n        }\n        const topRatedResponse = await fetch(topRatedUrl);\n        const topRatedData = await topRatedResponse.json();\n        const popularMoviesData = transformMovieData(popularData.results);\n        const latestMoviesData = transformMovieData(latestData.results);\n        const topRatedMoviesData = transformMovieData(topRatedData.results);\n        setPopularMovies(popularMoviesData);\n        setLatestMovies(latestMoviesData);\n        setTopRatedMovies(topRatedMoviesData);\n\n        // Fetch cast for all movies\n        const allMovies = [...popularMoviesData, ...latestMoviesData, ...topRatedMoviesData];\n\n        // Create a Set of unique movie IDs\n        const uniqueMovieIds = new Set(allMovies.map(movie => movie.id));\n\n        // Fetch cast for each unique movie\n        uniqueMovieIds.forEach(id => {\n          fetchMovieCast(id);\n        });\n        setError(null);\n      } catch (err) {\n        setError('Failed to fetch movies. Please try again later.');\n        console.error('Error fetching movies:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [selectedGenre]);\n\n  // Like/favorite a movie\n  const likeMovie = movieId => {\n    // Find the movie in any of our lists\n    const movie = popularMovies.find(m => m.id === movieId) || latestMovies.find(m => m.id === movieId) || topRatedMovies.find(m => m.id === movieId);\n    if (movie) {\n      // Add movie to liked movies\n      const likedMovies = [...userPreferences.likedMovies, movieId];\n\n      // Update favorite genres based on this movie\n      const movieGenres = movie.genre;\n      const favoriteGenres = [...new Set([...userPreferences.favoriteGenres, ...movieGenres])];\n      setUserPreferences({\n        favoriteGenres,\n        likedMovies\n      });\n    }\n  };\n\n  // Get all available movies for recommendations\n  const getAllMovies = () => {\n    // Combine all movies and remove duplicates\n    const allMovies = [...popularMovies, ...latestMovies, ...topRatedMovies];\n    const uniqueMovies = Array.from(new Map(allMovies.map(movie => [movie.id, movie])).values());\n    return uniqueMovies;\n  };\n\n  // Generate recommendations based on user preferences\n  useEffect(() => {\n    if (userPreferences.favoriteGenres.length > 0) {\n      const allMovies = getAllMovies();\n\n      // Get recommendations based on favorite genres and not already liked\n      const recommendations = allMovies.filter(movie => !userPreferences.likedMovies.includes(movie.id)).filter(movie => {\n        return movie.genre.some(genre => userPreferences.favoriteGenres.includes(genre));\n      }).sort((a, b) => b.rating - a.rating); // Sort by rating\n\n      setRecommendedMovies(recommendations);\n    }\n  }, [userPreferences, popularMovies, latestMovies, topRatedMovies]);\n\n  // Function to get genre names for a movie\n  const getGenreNames = genreIds => {\n    if (!genres.length || !genreIds) return 'Unknown';\n    return genreIds.map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : null;\n    }).filter(Boolean).join(', ');\n  };\n\n  // Get current movies based on active tab\n  const getCurrentMovies = () => {\n    switch (activeTab) {\n      case 'latest':\n        return latestMovies;\n      case 'topRated':\n        return topRatedMovies;\n      case 'popular':\n      default:\n        return popularMovies;\n    }\n  };\n\n  // Render cast for a movie\n  const renderCast = movieId => {\n    const cast = castInfo[movieId];\n    if (!cast || cast.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie-cast-loading\",\n        children: \"Loading cast...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-cast\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cast-header\",\n        children: [/*#__PURE__*/_jsxDEV(FaUser, {\n          className: \"cast-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), \" Cast\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cast-list\",\n        children: cast.map(actor => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-item\",\n          children: [actor.name, \" \", actor.character && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"character-name\",\n            children: [\"as \", actor.character]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 48\n          }, this)]\n        }, actor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render movie details popup\n  const renderMovieDetailsPopup = () => {\n    if (!selectedMovie) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-popup\",\n          onClick: closeMovieDetails,\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), movieDetails ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-details-backdrop\",\n            style: {\n              backgroundImage: movieDetails.backdrop_path ? `url(${BACKDROP_URL}${movieDetails.backdrop_path})` : 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"backdrop-overlay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-details-poster-container\",\n              children: movieDetails.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${IMG_URL}${movieDetails.poster_path}`,\n                alt: movieDetails.title,\n                className: \"movie-details-poster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-details-poster-fallback\",\n                children: movieDetails.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-details-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"movie-details-title\",\n                children: [movieDetails.title, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"movie-details-year\",\n                  children: [\"(\", movieDetails.release_date ? new Date(movieDetails.release_date).getFullYear() : 'Unknown', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-details-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movie-details-rating\",\n                  children: [/*#__PURE__*/_jsxDEV(FaStar, {\n                    className: \"rating-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 23\n                  }, this), \" \", movieDetails.vote_average.toFixed(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movie-details-runtime\",\n                  children: movieDetails.runtime && `${movieDetails.runtime} min`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movie-details-release\",\n                  children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n                    className: \"calendar-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 23\n                  }, this), \" \", movieDetails.release_date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-details-genres\",\n                children: movieDetails.genres.map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"movie-details-genre\",\n                  children: genre.name\n                }, genre.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-details-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-details-overview\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movieDetails.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-details-cast\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Cast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details-cast-list\",\n                children: castInfo[selectedMovie.id] ? castInfo[selectedMovie.id].map(actor => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details-cast-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cast-profile\",\n                    children: actor.profile ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: actor.profile,\n                      alt: actor.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 31\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"cast-profile-placeholder\",\n                      children: actor.name.substring(0, 1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cast-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"cast-name\",\n                      children: actor.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"cast-character\",\n                      children: actor.character\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 27\n                  }, this)]\n                }, actor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading cast information...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-details-providers\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Where to Watch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this), watchProviders ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"providers-container\",\n                children: [watchProviders.flatrate && watchProviders.flatrate.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"provider-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: [/*#__PURE__*/_jsxDEV(FaTv, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 31\n                    }, this), \" Stream\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"provider-logos\",\n                    children: watchProviders.flatrate.map(provider => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"provider-logo\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `${IMG_URL}${provider.logo_path}`,\n                        alt: provider.provider_name,\n                        title: provider.provider_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 486,\n                        columnNumber: 33\n                      }, this)\n                    }, provider.provider_id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 25\n                }, this) : null, watchProviders.rent && watchProviders.rent.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"provider-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: [/*#__PURE__*/_jsxDEV(FaPlayCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 31\n                    }, this), \" Rent\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"provider-logos\",\n                    children: watchProviders.rent.map(provider => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"provider-logo\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `${IMG_URL}${provider.logo_path}`,\n                        alt: provider.provider_name,\n                        title: provider.provider_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 33\n                      }, this)\n                    }, provider.provider_id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 25\n                }, this) : null, watchProviders.buy && watchProviders.buy.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"provider-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: [/*#__PURE__*/_jsxDEV(FaPlayCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 31\n                    }, this), \" Buy\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"provider-logos\",\n                    children: watchProviders.buy.map(provider => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"provider-logo\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `${IMG_URL}${provider.logo_path}`,\n                        alt: provider.provider_name,\n                        title: provider.provider_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 520,\n                        columnNumber: 33\n                      }, this)\n                    }, provider.provider_id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 25\n                }, this) : null, (!watchProviders.flatrate || watchProviders.flatrate.length === 0) && (!watchProviders.rent || watchProviders.rent.length === 0) && (!watchProviders.buy || watchProviders.buy.length === 0) ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No streaming information available for this movie.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 25\n                }, this) : null, watchProviders.link ? /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: watchProviders.link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"provider-link\",\n                  children: [/*#__PURE__*/_jsxDEV(FaLink, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 27\n                  }, this), \" View all watch options\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 25\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading watch options...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-details-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => likeMovie(selectedMovie.id),\n                className: `detail-like-button ${userPreferences.likedMovies.includes(selectedMovie.id) ? 'liked' : ''}`,\n                disabled: userPreferences.likedMovies.includes(selectedMovie.id),\n                children: [/*#__PURE__*/_jsxDEV(FaThumbsUp, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 21\n                }, this), \" \", userPreferences.likedMovies.includes(selectedMovie.id) ? 'Liked' : 'Like this movie']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-details-loading\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading movie details...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading && !isSearching) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-page-loading\",\n    children: [\"Loading movies\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 89\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 103\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 117\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 575,\n    columnNumber: 39\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-page-error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 576,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back-button\",\n          onClick: () => navigate(\"/home\"),\n          children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"movie-title\",\n          children: \"Discover Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n                className: \"search-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search for movies...\",\n                value: searchQuery,\n                onChange: handleSearchChange,\n                className: \"search-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 17\n              }, this), searchQuery && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-search\",\n                onClick: clearSearch,\n                children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-filter\",\n            children: [/*#__PURE__*/_jsxDEV(FaFilter, {\n              className: \"filter-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedGenre,\n              onChange: e => setSelectedGenre(Number(e.target.value)),\n              className: \"genre-select\",\n              children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: genre.id,\n                children: genre.name\n              }, genre.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n            className: \"section-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 15\n          }, this), searchResults.length > 0 ? `Search Results for \"${searchQuery}\" (${searchResults.length})` : `No results found for \"${searchQuery}\"`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-grid\",\n          children: searchResults.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-card\",\n            onClick: () => openMovieDetails(movie),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-poster-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(MoviePoster, {\n                posterUrl: movie.poster,\n                title: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-poster-overlay\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movie-poster-rating\",\n                  children: [/*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 25\n                  }, this), \" \", movie.rating.toFixed(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"movie-card-title\",\n                children: [movie.title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"movie-year\",\n                  children: [\"(\", movie.year, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"movie-genres\",\n                children: getGenreNames(movie.genre)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 21\n              }, this), renderCast(movie.id)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 19\n            }, this)]\n          }, `search-${movie.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this), !isSearching && recommendedMovies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommended-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(FaHeart, {\n            className: \"section-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), \"Recommended For You\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-grid\",\n          children: recommendedMovies.slice(0, 4).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-card\",\n            onClick: () => openMovieDetails(movie),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-poster-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(MoviePoster, {\n                posterUrl: movie.poster,\n                title: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-poster-overlay\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movie-poster-rating\",\n                  children: [/*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 25\n                  }, this), \" \", movie.rating.toFixed(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"movie-card-title\",\n                children: [movie.title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"movie-year\",\n                  children: [\"(\", movie.year, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"movie-genres\",\n                children: getGenreNames(movie.genre)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 21\n              }, this), renderCast(movie.id)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 19\n            }, this)]\n          }, `rec-${movie.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 11\n      }, this), !isSearching && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === 'popular' ? 'active' : ''}`,\n            onClick: () => setActiveTab('popular'),\n            children: [/*#__PURE__*/_jsxDEV(FaFire, {\n              className: \"tab-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this), \" Popular\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === 'latest' ? 'active' : ''}`,\n            onClick: () => setActiveTab('latest'),\n            children: [/*#__PURE__*/_jsxDEV(FaClock, {\n              className: \"tab-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, this), \" Latest Releases\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === 'topRated' ? 'active' : ''}`,\n            onClick: () => setActiveTab('topRated'),\n            children: [/*#__PURE__*/_jsxDEV(FaStar, {\n              className: \"tab-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this), \" Top Rated\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-grid\",\n          children: getCurrentMovies().map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-card\",\n            onClick: () => openMovieDetails(movie),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-poster-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(MoviePoster, {\n                posterUrl: movie.poster,\n                title: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movie-poster-overlay\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"movie-poster-rating\",\n                  children: [/*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 25\n                  }, this), \" \", movie.rating.toFixed(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"movie-card-title\",\n                children: [movie.title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"movie-year\",\n                  children: [\"(\", movie.year, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"movie-genres\",\n                children: getGenreNames(movie.genre)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 21\n              }, this), renderCast(movie.id)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 19\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 7\n    }, this), renderMovieDetailsPopup()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 579,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"IcCbOJ1aavJOI5z7ia3cfarGvvU=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FaArrowLeft","FaStar","FaThumbsUp","FaClock","FaFire","FaFilter","FaHeart","FaUser","FaTimes","FaPlayCircle","FaLink","FaCalendarAlt","FaTv","FaSearch","MoviePoster","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","BASE_URL","IMG_URL","BACKDROP_URL","MovieList","_s","navigate","popularMovies","setPopularMovies","latestMovies","setLatestMovies","topRatedMovies","setTopRatedMovies","loading","setLoading","error","setError","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","castInfo","setCastInfo","selectedMovie","setSelectedMovie","movieDetails","setMovieDetails","watchProviders","setWatchProviders","userPreferences","setUserPreferences","favoriteGenres","likedMovies","recommendedMovies","setRecommendedMovies","selectedGenre","setSelectedGenre","genres","setGenres","activeTab","setActiveTab","searchMovies","query","trim","response","fetch","encodeURIComponent","data","json","transformedResults","transformMovieData","results","forEach","movie","id","fetchMovieCast","console","handleSearchChange","e","value","target","timeoutId","setTimeout","clearTimeout","clearSearch","fetchGenres","name","err","movies","map","title","year","release_date","Date","getFullYear","rating","vote_average","genre","genre_ids","poster","poster_path","overview","movieId","cast","slice","actor","character","profile","profile_path","prev","fetchMovieDetails","fetchWatchProviders","providers","US","GB","openMovieDetails","document","body","style","overflow","closeMovieDetails","fetchMovies","popularUrl","popularResponse","popularData","latestUrl","latestResponse","latestData","topRatedUrl","topRatedResponse","topRatedData","popularMoviesData","latestMoviesData","topRatedMoviesData","allMovies","uniqueMovieIds","Set","likeMovie","find","m","movieGenres","getAllMovies","uniqueMovies","Array","from","Map","values","length","recommendations","filter","includes","some","sort","a","b","getGenreNames","genreIds","g","Boolean","join","getCurrentMovies","renderCast","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderMovieDetailsPopup","onClick","backgroundImage","backdrop_path","src","alt","toFixed","runtime","substring","flatrate","provider","logo_path","provider_name","provider_id","rent","buy","link","href","rel","disabled","type","placeholder","onChange","Number","posterUrl","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/firstweb/src/components/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaArrowLeft, FaStar, FaThumbsUp, FaClock, FaFire, FaFilter, FaHeart, FaUser, FaTimes, FaPlayCircle, FaLink, FaCalendarAlt, FaTv, FaSearch } from \"react-icons/fa\";\r\nimport MoviePoster from './MoviePoster';\r\nimport '../App.css';\r\n\r\n// TMDB API key and URLs\r\nconst API_KEY = '3fd2be6f0c70a2a598f084ddfb75487c'; // This is a demo key for testing\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\nconst BACKDROP_URL = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst MovieList = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  // State for movies\r\n  const [popularMovies, setPopularMovies] = useState([]);\r\n  const [latestMovies, setLatestMovies] = useState([]);\r\n  const [topRatedMovies, setTopRatedMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Search functionality\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  \r\n  // Cast information cache\r\n  const [castInfo, setCastInfo] = useState({});\r\n  \r\n  // Movie detail popup state\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [movieDetails, setMovieDetails] = useState(null);\r\n  const [watchProviders, setWatchProviders] = useState(null);\r\n  \r\n  // User preferences for recommendations\r\n  const [userPreferences, setUserPreferences] = useState({\r\n    favoriteGenres: [],\r\n    likedMovies: []\r\n  });\r\n\r\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState(0); // 0 means all genres\r\n  const [genres, setGenres] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('popular');\r\n\r\n  // Search for movies\r\n  const searchMovies = async (query) => {\r\n    if (!query.trim()) {\r\n      setSearchResults([]);\r\n      setIsSearching(false);\r\n      return;\r\n    }\r\n    \r\n    setIsSearching(true);\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${encodeURIComponent(query)}&page=1&include_adult=false`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      // Transform search results\r\n      const transformedResults = transformMovieData(data.results);\r\n      setSearchResults(transformedResults);\r\n      \r\n      // Fetch cast for search results\r\n      transformedResults.forEach(movie => {\r\n        if (!castInfo[movie.id]) {\r\n          fetchMovieCast(movie.id);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error searching movies:\", error);\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  // Handle search input change\r\n  const handleSearchChange = (e) => {\r\n    const value = e.target.value;\r\n    setSearchQuery(value);\r\n    \r\n    // Debounce search to avoid too many requests\r\n    const timeoutId = setTimeout(() => {\r\n      searchMovies(value);\r\n    }, 500);\r\n    \r\n    return () => clearTimeout(timeoutId);\r\n  };\r\n\r\n  // Clear search\r\n  const clearSearch = () => {\r\n    setSearchQuery('');\r\n    setSearchResults([]);\r\n    setIsSearching(false);\r\n  };\r\n\r\n  // Fetch genres\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\r\n        const data = await response.json();\r\n        setGenres([{ id: 0, name: 'All' }, ...data.genres]);\r\n      } catch (err) {\r\n        console.error('Error fetching genres:', err);\r\n      }\r\n    };\r\n    \r\n    fetchGenres();\r\n  }, []);\r\n\r\n  // Transform movie data to our format\r\n  const transformMovieData = (movies) => {\r\n    return movies.map(movie => ({\r\n      id: movie.id,\r\n      title: movie.title,\r\n      year: movie.release_date ? new Date(movie.release_date).getFullYear() : 'Unknown',\r\n      rating: movie.vote_average,\r\n      genre: movie.genre_ids,\r\n      poster: movie.poster_path ? `${IMG_URL}${movie.poster_path}` : null,\r\n      overview: movie.overview,\r\n      release_date: movie.release_date\r\n    }));\r\n  };\r\n\r\n  // Fetch cast for a movie\r\n  const fetchMovieCast = async (movieId) => {\r\n    // Check if we already have the cast information\r\n    if (castInfo[movieId]) return;\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      // Get top 3 cast members\r\n      const cast = data.cast.slice(0, 3).map(actor => ({\r\n        id: actor.id,\r\n        name: actor.name,\r\n        character: actor.character,\r\n        profile: actor.profile_path ? `${IMG_URL}${actor.profile_path}` : null\r\n      }));\r\n      \r\n      // Update cast info state\r\n      setCastInfo(prev => ({\r\n        ...prev,\r\n        [movieId]: cast\r\n      }));\r\n    } catch (error) {\r\n      console.error(`Error fetching cast for movie ${movieId}:`, error);\r\n    }\r\n  };\r\n\r\n  // Fetch detailed movie information\r\n  const fetchMovieDetails = async (movieId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&append_to_response=videos,similar`\r\n      );\r\n      const data = await response.json();\r\n      setMovieDetails(data);\r\n      \r\n      // Also fetch watch providers\r\n      fetchWatchProviders(movieId);\r\n    } catch (error) {\r\n      console.error(`Error fetching movie details for movie ${movieId}:`, error);\r\n    }\r\n  };\r\n\r\n  // Fetch watch providers for a movie\r\n  const fetchWatchProviders = async (movieId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}/movie/${movieId}/watch/providers?api_key=${API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      // Get US providers or fall back to GB if US isn't available\r\n      const providers = data.results.US || data.results.GB || {};\r\n      setWatchProviders(providers);\r\n    } catch (error) {\r\n      console.error(`Error fetching watch providers for movie ${movieId}:`, error);\r\n      setWatchProviders(null);\r\n    }\r\n  };\r\n\r\n  // Open movie details popup\r\n  const openMovieDetails = (movie) => {\r\n    setSelectedMovie(movie);\r\n    fetchMovieDetails(movie.id);\r\n    \r\n    // If we don't have cast info for this movie yet, fetch it\r\n    if (!castInfo[movie.id]) {\r\n      fetchMovieCast(movie.id);\r\n    }\r\n    \r\n    // Prevent body scrolling when modal is open\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n\r\n  // Close movie details popup\r\n  const closeMovieDetails = () => {\r\n    setSelectedMovie(null);\r\n    setMovieDetails(null);\r\n    setWatchProviders(null);\r\n    \r\n    // Re-enable body scrolling\r\n    document.body.style.overflow = 'auto';\r\n  };\r\n\r\n  // Fetch popular movies\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Popular movies\r\n        let popularUrl = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        if (selectedGenre !== 0) {\r\n          popularUrl = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=${selectedGenre}&sort_by=popularity.desc`;\r\n        }\r\n        const popularResponse = await fetch(popularUrl);\r\n        const popularData = await popularResponse.json();\r\n        \r\n        // Latest movies (now playing)\r\n        let latestUrl = `${BASE_URL}/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`;\r\n        if (selectedGenre !== 0) {\r\n          latestUrl = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=${selectedGenre}&sort_by=release_date.desc`;\r\n        }\r\n        const latestResponse = await fetch(latestUrl);\r\n        const latestData = await latestResponse.json();\r\n        \r\n        // Top rated movies\r\n        let topRatedUrl = `${BASE_URL}/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`;\r\n        if (selectedGenre !== 0) {\r\n          topRatedUrl = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=${selectedGenre}&sort_by=vote_average.desc&vote_count.gte=1000`;\r\n        }\r\n        const topRatedResponse = await fetch(topRatedUrl);\r\n        const topRatedData = await topRatedResponse.json();\r\n        \r\n        const popularMoviesData = transformMovieData(popularData.results);\r\n        const latestMoviesData = transformMovieData(latestData.results);\r\n        const topRatedMoviesData = transformMovieData(topRatedData.results);\r\n        \r\n        setPopularMovies(popularMoviesData);\r\n        setLatestMovies(latestMoviesData);\r\n        setTopRatedMovies(topRatedMoviesData);\r\n        \r\n        // Fetch cast for all movies\r\n        const allMovies = [\r\n          ...popularMoviesData,\r\n          ...latestMoviesData,\r\n          ...topRatedMoviesData\r\n        ];\r\n        \r\n        // Create a Set of unique movie IDs\r\n        const uniqueMovieIds = new Set(allMovies.map(movie => movie.id));\r\n        \r\n        // Fetch cast for each unique movie\r\n        uniqueMovieIds.forEach(id => {\r\n          fetchMovieCast(id);\r\n        });\r\n        \r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to fetch movies. Please try again later.');\r\n        console.error('Error fetching movies:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchMovies();\r\n  }, [selectedGenre]);\r\n\r\n  // Like/favorite a movie\r\n  const likeMovie = (movieId) => {\r\n    // Find the movie in any of our lists\r\n    const movie = \r\n      popularMovies.find(m => m.id === movieId) || \r\n      latestMovies.find(m => m.id === movieId) || \r\n      topRatedMovies.find(m => m.id === movieId);\r\n\r\n    if (movie) {\r\n      // Add movie to liked movies\r\n      const likedMovies = [...userPreferences.likedMovies, movieId];\r\n      \r\n      // Update favorite genres based on this movie\r\n      const movieGenres = movie.genre;\r\n      const favoriteGenres = [...new Set([...userPreferences.favoriteGenres, ...movieGenres])];\r\n      \r\n      setUserPreferences({\r\n        favoriteGenres,\r\n        likedMovies\r\n      });\r\n    }\r\n  };\r\n\r\n  // Get all available movies for recommendations\r\n  const getAllMovies = () => {\r\n    // Combine all movies and remove duplicates\r\n    const allMovies = [...popularMovies, ...latestMovies, ...topRatedMovies];\r\n    const uniqueMovies = Array.from(new Map(allMovies.map(movie => [movie.id, movie])).values());\r\n    return uniqueMovies;\r\n  };\r\n\r\n  // Generate recommendations based on user preferences\r\n  useEffect(() => {\r\n    if (userPreferences.favoriteGenres.length > 0) {\r\n      const allMovies = getAllMovies();\r\n      \r\n      // Get recommendations based on favorite genres and not already liked\r\n      const recommendations = allMovies\r\n        .filter(movie => !userPreferences.likedMovies.includes(movie.id))\r\n        .filter(movie => {\r\n          return movie.genre.some(genre => userPreferences.favoriteGenres.includes(genre));\r\n        })\r\n        .sort((a, b) => b.rating - a.rating); // Sort by rating\r\n      \r\n      setRecommendedMovies(recommendations);\r\n    }\r\n  }, [userPreferences, popularMovies, latestMovies, topRatedMovies]);\r\n\r\n  // Function to get genre names for a movie\r\n  const getGenreNames = (genreIds) => {\r\n    if (!genres.length || !genreIds) return 'Unknown';\r\n    \r\n    return genreIds\r\n      .map(id => {\r\n        const genre = genres.find(g => g.id === id);\r\n        return genre ? genre.name : null;\r\n      })\r\n      .filter(Boolean)\r\n      .join(', ');\r\n  };\r\n\r\n  // Get current movies based on active tab\r\n  const getCurrentMovies = () => {\r\n    switch(activeTab) {\r\n      case 'latest':\r\n        return latestMovies;\r\n      case 'topRated':\r\n        return topRatedMovies;\r\n      case 'popular':\r\n      default:\r\n        return popularMovies;\r\n    }\r\n  };\r\n\r\n  // Render cast for a movie\r\n  const renderCast = (movieId) => {\r\n    const cast = castInfo[movieId];\r\n    \r\n    if (!cast || cast.length === 0) {\r\n      return <p className=\"movie-cast-loading\">Loading cast...</p>;\r\n    }\r\n    \r\n    return (\r\n      <div className=\"movie-cast\">\r\n        <div className=\"cast-header\">\r\n          <FaUser className=\"cast-icon\" /> Cast\r\n        </div>\r\n        <div className=\"cast-list\">\r\n          {cast.map(actor => (\r\n            <div key={actor.id} className=\"cast-item\">\r\n              {actor.name} {actor.character && <span className=\"character-name\">as {actor.character}</span>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Render movie details popup\r\n  const renderMovieDetailsPopup = () => {\r\n    if (!selectedMovie) return null;\r\n    \r\n    return (\r\n      <div className=\"movie-details-popup\">\r\n        <div className=\"movie-details-content\">\r\n          <button className=\"close-popup\" onClick={closeMovieDetails}>\r\n            <FaTimes />\r\n          </button>\r\n          \r\n          {movieDetails ? (\r\n            <>\r\n              <div \r\n                className=\"movie-details-backdrop\" \r\n                style={{ \r\n                  backgroundImage: movieDetails.backdrop_path \r\n                    ? `url(${BACKDROP_URL}${movieDetails.backdrop_path})` \r\n                    : 'none' \r\n                }}\r\n              >\r\n                <div className=\"backdrop-overlay\"></div>\r\n                <div className=\"movie-details-poster-container\">\r\n                  {movieDetails.poster_path ? (\r\n                    <img \r\n                      src={`${IMG_URL}${movieDetails.poster_path}`} \r\n                      alt={movieDetails.title} \r\n                      className=\"movie-details-poster\" \r\n                    />\r\n                  ) : (\r\n                    <div className=\"movie-details-poster-fallback\">\r\n                      {movieDetails.title}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"movie-details-header\">\r\n                  <h2 className=\"movie-details-title\">\r\n                    {movieDetails.title} \r\n                    <span className=\"movie-details-year\">\r\n                      ({movieDetails.release_date ? new Date(movieDetails.release_date).getFullYear() : 'Unknown'})\r\n                    </span>\r\n                  </h2>\r\n                  \r\n                  <div className=\"movie-details-meta\">\r\n                    <div className=\"movie-details-rating\">\r\n                      <FaStar className=\"rating-icon\" /> {movieDetails.vote_average.toFixed(1)}\r\n                    </div>\r\n                    <div className=\"movie-details-runtime\">\r\n                      {movieDetails.runtime && `${movieDetails.runtime} min`}\r\n                    </div>\r\n                    <div className=\"movie-details-release\">\r\n                      <FaCalendarAlt className=\"calendar-icon\" /> {movieDetails.release_date}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"movie-details-genres\">\r\n                    {movieDetails.genres.map(genre => (\r\n                      <span key={genre.id} className=\"movie-details-genre\">\r\n                        {genre.name}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"movie-details-body\">\r\n                <div className=\"movie-details-overview\">\r\n                  <h3>Overview</h3>\r\n                  <p>{movieDetails.overview}</p>\r\n                </div>\r\n                \r\n                {/* Cast section */}\r\n                <div className=\"movie-details-cast\">\r\n                  <h3>Cast</h3>\r\n                  <div className=\"details-cast-list\">\r\n                    {castInfo[selectedMovie.id] ? \r\n                      castInfo[selectedMovie.id].map(actor => (\r\n                        <div key={actor.id} className=\"details-cast-item\">\r\n                          <div className=\"cast-profile\">\r\n                            {actor.profile ? (\r\n                              <img src={actor.profile} alt={actor.name} />\r\n                            ) : (\r\n                              <div className=\"cast-profile-placeholder\">\r\n                                {actor.name.substring(0, 1)}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"cast-info\">\r\n                            <div className=\"cast-name\">{actor.name}</div>\r\n                            <div className=\"cast-character\">{actor.character}</div>\r\n                          </div>\r\n                        </div>\r\n                      )) : \r\n                      <p>Loading cast information...</p>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Watch providers section */}\r\n                <div className=\"movie-details-providers\">\r\n                  <h3>Where to Watch</h3>\r\n                  {watchProviders ? (\r\n                    <div className=\"providers-container\">\r\n                      {watchProviders.flatrate && watchProviders.flatrate.length > 0 ? (\r\n                        <div className=\"provider-section\">\r\n                          <h4><FaTv /> Stream</h4>\r\n                          <div className=\"provider-logos\">\r\n                            {watchProviders.flatrate.map(provider => (\r\n                              <div key={provider.provider_id} className=\"provider-logo\">\r\n                                <img \r\n                                  src={`${IMG_URL}${provider.logo_path}`} \r\n                                  alt={provider.provider_name} \r\n                                  title={provider.provider_name}\r\n                                />\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      ) : null}\r\n                      \r\n                      {watchProviders.rent && watchProviders.rent.length > 0 ? (\r\n                        <div className=\"provider-section\">\r\n                          <h4><FaPlayCircle /> Rent</h4>\r\n                          <div className=\"provider-logos\">\r\n                            {watchProviders.rent.map(provider => (\r\n                              <div key={provider.provider_id} className=\"provider-logo\">\r\n                                <img \r\n                                  src={`${IMG_URL}${provider.logo_path}`} \r\n                                  alt={provider.provider_name} \r\n                                  title={provider.provider_name}\r\n                                />\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      ) : null}\r\n                      \r\n                      {watchProviders.buy && watchProviders.buy.length > 0 ? (\r\n                        <div className=\"provider-section\">\r\n                          <h4><FaPlayCircle /> Buy</h4>\r\n                          <div className=\"provider-logos\">\r\n                            {watchProviders.buy.map(provider => (\r\n                              <div key={provider.provider_id} className=\"provider-logo\">\r\n                                <img \r\n                                  src={`${IMG_URL}${provider.logo_path}`} \r\n                                  alt={provider.provider_name} \r\n                                  title={provider.provider_name}\r\n                                />\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      ) : null}\r\n                      \r\n                      {(!watchProviders.flatrate || watchProviders.flatrate.length === 0) && \r\n                       (!watchProviders.rent || watchProviders.rent.length === 0) && \r\n                       (!watchProviders.buy || watchProviders.buy.length === 0) ? (\r\n                        <p>No streaming information available for this movie.</p>\r\n                      ) : null}\r\n                      \r\n                      {watchProviders.link ? (\r\n                        <a \r\n                          href={watchProviders.link} \r\n                          target=\"_blank\" \r\n                          rel=\"noopener noreferrer\" \r\n                          className=\"provider-link\"\r\n                        >\r\n                          <FaLink /> View all watch options\r\n                        </a>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : (\r\n                    <p>Loading watch options...</p>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Action buttons */}\r\n                <div className=\"movie-details-actions\">\r\n                  <button \r\n                    onClick={() => likeMovie(selectedMovie.id)}\r\n                    className={`detail-like-button ${userPreferences.likedMovies.includes(selectedMovie.id) ? 'liked' : ''}`}\r\n                    disabled={userPreferences.likedMovies.includes(selectedMovie.id)}\r\n                  >\r\n                    <FaThumbsUp /> {userPreferences.likedMovies.includes(selectedMovie.id) ? 'Liked' : 'Like this movie'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"movie-details-loading\">\r\n              <p>Loading movie details...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading && !isSearching) return <div className=\"movie-page-loading\">Loading movies<span>.</span><span>.</span><span>.</span></div>;\r\n  if (error) return <div className=\"movie-page-error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"movie-page\">\r\n      <div className=\"movie-container\">\r\n        <div className=\"movie-header\">\r\n          <div className=\"back-button\" onClick={() => navigate(\"/home\")}>\r\n            <FaArrowLeft />\r\n            <span>Back to Home</span>\r\n          </div>\r\n          \r\n          <h1 className=\"movie-title\">Discover Movies</h1>\r\n          \r\n          <div className=\"movie-actions\">\r\n            {/* Search Bar */}\r\n            <div className=\"search-container\">\r\n              <div className=\"search-input-wrapper\">\r\n                <FaSearch className=\"search-icon\" />\r\n                <input \r\n                  type=\"text\"\r\n                  placeholder=\"Search for movies...\"\r\n                  value={searchQuery}\r\n                  onChange={handleSearchChange}\r\n                  className=\"search-input\"\r\n                />\r\n                {searchQuery && (\r\n                  <button className=\"clear-search\" onClick={clearSearch}>\r\n                    <FaTimes />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Genre Filter */}\r\n            <div className=\"genre-filter\">\r\n              <FaFilter className=\"filter-icon\" />\r\n              <select \r\n                value={selectedGenre} \r\n                onChange={(e) => setSelectedGenre(Number(e.target.value))}\r\n                className=\"genre-select\"\r\n              >\r\n                {genres.map(genre => (\r\n                  <option key={genre.id} value={genre.id}>{genre.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Search Results */}\r\n        {isSearching && (\r\n          <div className=\"search-results\">\r\n            <h2 className=\"section-title\">\r\n              <FaSearch className=\"section-icon\" /> \r\n              {searchResults.length > 0 ? \r\n                `Search Results for \"${searchQuery}\" (${searchResults.length})` : \r\n                `No results found for \"${searchQuery}\"`}\r\n            </h2>\r\n            <div className=\"movie-grid\">\r\n              {searchResults.map(movie => (\r\n                <div key={`search-${movie.id}`} className=\"movie-card\" onClick={() => openMovieDetails(movie)}>\r\n                  <div className=\"movie-poster-wrapper\">\r\n                    <MoviePoster posterUrl={movie.poster} title={movie.title} />\r\n                    <div className=\"movie-poster-overlay\">\r\n                      <div className=\"movie-poster-rating\">\r\n                        <FaStar /> {movie.rating.toFixed(1)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"movie-info\">\r\n                    <h3 className=\"movie-card-title\">{movie.title} <span className=\"movie-year\">({movie.year})</span></h3>\r\n                    <p className=\"movie-genres\">{getGenreNames(movie.genre)}</p>\r\n                    {renderCast(movie.id)}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Recommended Movies Section */}\r\n        {!isSearching && recommendedMovies.length > 0 && (\r\n          <div className=\"recommended-section\">\r\n            <h2 className=\"section-title\">\r\n              <FaHeart className=\"section-icon\" /> \r\n              Recommended For You\r\n            </h2>\r\n            <div className=\"movie-grid\">\r\n              {recommendedMovies.slice(0, 4).map(movie => (\r\n                <div key={`rec-${movie.id}`} className=\"movie-card\" onClick={() => openMovieDetails(movie)}>\r\n                  <div className=\"movie-poster-wrapper\">\r\n                    <MoviePoster posterUrl={movie.poster} title={movie.title} />\r\n                    <div className=\"movie-poster-overlay\">\r\n                      <div className=\"movie-poster-rating\">\r\n                        <FaStar /> {movie.rating.toFixed(1)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"movie-info\">\r\n                    <h3 className=\"movie-card-title\">{movie.title} <span className=\"movie-year\">({movie.year})</span></h3>\r\n                    <p className=\"movie-genres\">{getGenreNames(movie.genre)}</p>\r\n                    {renderCast(movie.id)}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Movie Categories Tabs - Only show if not searching */}\r\n        {!isSearching && (\r\n          <>\r\n            <div className=\"movie-tabs\">\r\n              <button \r\n                className={`tab-button ${activeTab === 'popular' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('popular')}\r\n              >\r\n                <FaFire className=\"tab-icon\" /> Popular\r\n              </button>\r\n              <button \r\n                className={`tab-button ${activeTab === 'latest' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('latest')}\r\n              >\r\n                <FaClock className=\"tab-icon\" /> Latest Releases\r\n              </button>\r\n              <button \r\n                className={`tab-button ${activeTab === 'topRated' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('topRated')}\r\n              >\r\n                <FaStar className=\"tab-icon\" /> Top Rated\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Movies Grid */}\r\n            <div className=\"movie-grid\">\r\n              {getCurrentMovies().map(movie => (\r\n                <div key={movie.id} className=\"movie-card\" onClick={() => openMovieDetails(movie)}>\r\n                  <div className=\"movie-poster-wrapper\">\r\n                    <MoviePoster posterUrl={movie.poster} title={movie.title} />\r\n                    <div className=\"movie-poster-overlay\">\r\n                      <div className=\"movie-poster-rating\">\r\n                        <FaStar /> {movie.rating.toFixed(1)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"movie-info\">\r\n                    <h3 className=\"movie-card-title\">{movie.title} <span className=\"movie-year\">({movie.year})</span></h3>\r\n                    <p className=\"movie-genres\">{getGenreNames(movie.genre)}</p>\r\n                    {renderCast(movie.id)}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Movie Details Popup */}\r\n      {renderMovieDetailsPopup()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAEC,MAAM,EAAEC,aAAa,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,gBAAgB;AAC1K,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,YAAY;;AAEnB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,OAAO,GAAG,kCAAkC,CAAC,CAAC;AACpD,MAAMC,QAAQ,GAAG,8BAA8B;AAC/C,MAAMC,OAAO,GAAG,iCAAiC;AACjD,MAAMC,YAAY,GAAG,qCAAqC;AAE1D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAG1B,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAM,CAAC+C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiD,YAAY,EAAEC,eAAe,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmD,cAAc,EAAEC,iBAAiB,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAM,CAACqD,eAAe,EAAEC,kBAAkB,CAAC,GAAGtD,QAAQ,CAAC;IACrDuD,cAAc,EAAE,EAAE;IAClBC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC2D,aAAa,EAAEC,gBAAgB,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC6D,MAAM,EAAEC,SAAS,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC+D,SAAS,EAAEC,YAAY,CAAC,GAAGhE,QAAQ,CAAC,SAAS,CAAC;;EAErD;EACA,MAAMiE,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;MACjBzB,gBAAgB,CAAC,EAAE,CAAC;MACpBE,cAAc,CAAC,KAAK,CAAC;MACrB;IACF;IAEAA,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACF,MAAMwB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAG9C,QAAQ,yBAAyBD,OAAO,yBAAyBgD,kBAAkB,CAACJ,KAAK,CAAC,6BAC/F,CAAC;MACD,MAAMK,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,kBAAkB,GAAGC,kBAAkB,CAACH,IAAI,CAACI,OAAO,CAAC;MAC3DjC,gBAAgB,CAAC+B,kBAAkB,CAAC;;MAEpC;MACAA,kBAAkB,CAACG,OAAO,CAACC,KAAK,IAAI;QAClC,IAAI,CAAChC,QAAQ,CAACgC,KAAK,CAACC,EAAE,CAAC,EAAE;UACvBC,cAAc,CAACF,KAAK,CAACC,EAAE,CAAC;QAC1B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOzC,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CK,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMuC,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B3C,cAAc,CAAC2C,KAAK,CAAC;;IAErB;IACA,MAAME,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCrB,YAAY,CAACkB,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMI,YAAY,CAACF,SAAS,CAAC;EACtC,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBhD,cAAc,CAAC,EAAE,CAAC;IAClBE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACA3C,SAAS,CAAC,MAAM;IACd,MAAMwF,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG9C,QAAQ,6BAA6BD,OAAO,EAAE,CAAC;QAC/E,MAAMiD,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCV,SAAS,CAAC,CAAC;UAAEgB,EAAE,EAAE,CAAC;UAAEY,IAAI,EAAE;QAAM,CAAC,EAAE,GAAGnB,IAAI,CAACV,MAAM,CAAC,CAAC;MACrD,CAAC,CAAC,OAAO8B,GAAG,EAAE;QACZX,OAAO,CAAC3C,KAAK,CAAC,wBAAwB,EAAEsD,GAAG,CAAC;MAC9C;IACF,CAAC;IAEDF,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMf,kBAAkB,GAAIkB,MAAM,IAAK;IACrC,OAAOA,MAAM,CAACC,GAAG,CAAChB,KAAK,KAAK;MAC1BC,EAAE,EAAED,KAAK,CAACC,EAAE;MACZgB,KAAK,EAAEjB,KAAK,CAACiB,KAAK;MAClBC,IAAI,EAAElB,KAAK,CAACmB,YAAY,GAAG,IAAIC,IAAI,CAACpB,KAAK,CAACmB,YAAY,CAAC,CAACE,WAAW,CAAC,CAAC,GAAG,SAAS;MACjFC,MAAM,EAAEtB,KAAK,CAACuB,YAAY;MAC1BC,KAAK,EAAExB,KAAK,CAACyB,SAAS;MACtBC,MAAM,EAAE1B,KAAK,CAAC2B,WAAW,GAAG,GAAGhF,OAAO,GAAGqD,KAAK,CAAC2B,WAAW,EAAE,GAAG,IAAI;MACnEC,QAAQ,EAAE5B,KAAK,CAAC4B,QAAQ;MACxBT,YAAY,EAAEnB,KAAK,CAACmB;IACtB,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMjB,cAAc,GAAG,MAAO2B,OAAO,IAAK;IACxC;IACA,IAAI7D,QAAQ,CAAC6D,OAAO,CAAC,EAAE;IAEvB,IAAI;MACF,MAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAG9C,QAAQ,UAAUmF,OAAO,oBAAoBpF,OAAO,EACzD,CAAC;MACD,MAAMiD,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMmC,IAAI,GAAGpC,IAAI,CAACoC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACf,GAAG,CAACgB,KAAK,KAAK;QAC/C/B,EAAE,EAAE+B,KAAK,CAAC/B,EAAE;QACZY,IAAI,EAAEmB,KAAK,CAACnB,IAAI;QAChBoB,SAAS,EAAED,KAAK,CAACC,SAAS;QAC1BC,OAAO,EAAEF,KAAK,CAACG,YAAY,GAAG,GAAGxF,OAAO,GAAGqF,KAAK,CAACG,YAAY,EAAE,GAAG;MACpE,CAAC,CAAC,CAAC;;MAEH;MACAlE,WAAW,CAACmE,IAAI,KAAK;QACnB,GAAGA,IAAI;QACP,CAACP,OAAO,GAAGC;MACb,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOtE,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,iCAAiCqE,OAAO,GAAG,EAAErE,KAAK,CAAC;IACnE;EACF,CAAC;;EAED;EACA,MAAM6E,iBAAiB,GAAG,MAAOR,OAAO,IAAK;IAC3C,IAAI;MACF,MAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAG9C,QAAQ,UAAUmF,OAAO,YAAYpF,OAAO,oCACjD,CAAC;MACD,MAAMiD,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCtB,eAAe,CAACqB,IAAI,CAAC;;MAErB;MACA4C,mBAAmB,CAACT,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOrE,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,0CAA0CqE,OAAO,GAAG,EAAErE,KAAK,CAAC;IAC5E;EACF,CAAC;;EAED;EACA,MAAM8E,mBAAmB,GAAG,MAAOT,OAAO,IAAK;IAC7C,IAAI;MACF,MAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAG9C,QAAQ,UAAUmF,OAAO,4BAA4BpF,OAAO,EACjE,CAAC;MACD,MAAMiD,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;;MAElC;MACA,MAAM4C,SAAS,GAAG7C,IAAI,CAACI,OAAO,CAAC0C,EAAE,IAAI9C,IAAI,CAACI,OAAO,CAAC2C,EAAE,IAAI,CAAC,CAAC;MAC1DlE,iBAAiB,CAACgE,SAAS,CAAC;IAC9B,CAAC,CAAC,OAAO/E,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,4CAA4CqE,OAAO,GAAG,EAAErE,KAAK,CAAC;MAC5Ee,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMmE,gBAAgB,GAAI1C,KAAK,IAAK;IAClC7B,gBAAgB,CAAC6B,KAAK,CAAC;IACvBqC,iBAAiB,CAACrC,KAAK,CAACC,EAAE,CAAC;;IAE3B;IACA,IAAI,CAACjC,QAAQ,CAACgC,KAAK,CAACC,EAAE,CAAC,EAAE;MACvBC,cAAc,CAACF,KAAK,CAACC,EAAE,CAAC;IAC1B;;IAEA;IACA0C,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;EACzC,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B5E,gBAAgB,CAAC,IAAI,CAAC;IACtBE,eAAe,CAAC,IAAI,CAAC;IACrBE,iBAAiB,CAAC,IAAI,CAAC;;IAEvB;IACAoE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,MAAM;EACvC,CAAC;;EAED;EACA1H,SAAS,CAAC,MAAM;IACd,MAAM4H,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BzF,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF;QACA,IAAI0F,UAAU,GAAG,GAAGvG,QAAQ,0BAA0BD,OAAO,wBAAwB;QACrF,IAAIqC,aAAa,KAAK,CAAC,EAAE;UACvBmE,UAAU,GAAG,GAAGvG,QAAQ,2BAA2BD,OAAO,gBAAgBqC,aAAa,0BAA0B;QACnH;QACA,MAAMoE,eAAe,GAAG,MAAM1D,KAAK,CAACyD,UAAU,CAAC;QAC/C,MAAME,WAAW,GAAG,MAAMD,eAAe,CAACvD,IAAI,CAAC,CAAC;;QAEhD;QACA,IAAIyD,SAAS,GAAG,GAAG1G,QAAQ,8BAA8BD,OAAO,wBAAwB;QACxF,IAAIqC,aAAa,KAAK,CAAC,EAAE;UACvBsE,SAAS,GAAG,GAAG1G,QAAQ,2BAA2BD,OAAO,gBAAgBqC,aAAa,4BAA4B;QACpH;QACA,MAAMuE,cAAc,GAAG,MAAM7D,KAAK,CAAC4D,SAAS,CAAC;QAC7C,MAAME,UAAU,GAAG,MAAMD,cAAc,CAAC1D,IAAI,CAAC,CAAC;;QAE9C;QACA,IAAI4D,WAAW,GAAG,GAAG7G,QAAQ,4BAA4BD,OAAO,wBAAwB;QACxF,IAAIqC,aAAa,KAAK,CAAC,EAAE;UACvByE,WAAW,GAAG,GAAG7G,QAAQ,2BAA2BD,OAAO,gBAAgBqC,aAAa,gDAAgD;QAC1I;QACA,MAAM0E,gBAAgB,GAAG,MAAMhE,KAAK,CAAC+D,WAAW,CAAC;QACjD,MAAME,YAAY,GAAG,MAAMD,gBAAgB,CAAC7D,IAAI,CAAC,CAAC;QAElD,MAAM+D,iBAAiB,GAAG7D,kBAAkB,CAACsD,WAAW,CAACrD,OAAO,CAAC;QACjE,MAAM6D,gBAAgB,GAAG9D,kBAAkB,CAACyD,UAAU,CAACxD,OAAO,CAAC;QAC/D,MAAM8D,kBAAkB,GAAG/D,kBAAkB,CAAC4D,YAAY,CAAC3D,OAAO,CAAC;QAEnE7C,gBAAgB,CAACyG,iBAAiB,CAAC;QACnCvG,eAAe,CAACwG,gBAAgB,CAAC;QACjCtG,iBAAiB,CAACuG,kBAAkB,CAAC;;QAErC;QACA,MAAMC,SAAS,GAAG,CAChB,GAAGH,iBAAiB,EACpB,GAAGC,gBAAgB,EACnB,GAAGC,kBAAkB,CACtB;;QAED;QACA,MAAME,cAAc,GAAG,IAAIC,GAAG,CAACF,SAAS,CAAC7C,GAAG,CAAChB,KAAK,IAAIA,KAAK,CAACC,EAAE,CAAC,CAAC;;QAEhE;QACA6D,cAAc,CAAC/D,OAAO,CAACE,EAAE,IAAI;UAC3BC,cAAc,CAACD,EAAE,CAAC;QACpB,CAAC,CAAC;QAEFxC,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOqD,GAAG,EAAE;QACZrD,QAAQ,CAAC,iDAAiD,CAAC;QAC3D0C,OAAO,CAAC3C,KAAK,CAAC,wBAAwB,EAAEsD,GAAG,CAAC;MAC9C,CAAC,SAAS;QACRvD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDyF,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAAClE,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMkF,SAAS,GAAInC,OAAO,IAAK;IAC7B;IACA,MAAM7B,KAAK,GACThD,aAAa,CAACiH,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjE,EAAE,KAAK4B,OAAO,CAAC,IACzC3E,YAAY,CAAC+G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjE,EAAE,KAAK4B,OAAO,CAAC,IACxCzE,cAAc,CAAC6G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjE,EAAE,KAAK4B,OAAO,CAAC;IAE5C,IAAI7B,KAAK,EAAE;MACT;MACA,MAAMrB,WAAW,GAAG,CAAC,GAAGH,eAAe,CAACG,WAAW,EAAEkD,OAAO,CAAC;;MAE7D;MACA,MAAMsC,WAAW,GAAGnE,KAAK,CAACwB,KAAK;MAC/B,MAAM9C,cAAc,GAAG,CAAC,GAAG,IAAIqF,GAAG,CAAC,CAAC,GAAGvF,eAAe,CAACE,cAAc,EAAE,GAAGyF,WAAW,CAAC,CAAC,CAAC;MAExF1F,kBAAkB,CAAC;QACjBC,cAAc;QACdC;MACF,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMyF,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAMP,SAAS,GAAG,CAAC,GAAG7G,aAAa,EAAE,GAAGE,YAAY,EAAE,GAAGE,cAAc,CAAC;IACxE,MAAMiH,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACX,SAAS,CAAC7C,GAAG,CAAChB,KAAK,IAAI,CAACA,KAAK,CAACC,EAAE,EAAED,KAAK,CAAC,CAAC,CAAC,CAACyE,MAAM,CAAC,CAAC,CAAC;IAC5F,OAAOJ,YAAY;EACrB,CAAC;;EAED;EACAjJ,SAAS,CAAC,MAAM;IACd,IAAIoD,eAAe,CAACE,cAAc,CAACgG,MAAM,GAAG,CAAC,EAAE;MAC7C,MAAMb,SAAS,GAAGO,YAAY,CAAC,CAAC;;MAEhC;MACA,MAAMO,eAAe,GAAGd,SAAS,CAC9Be,MAAM,CAAC5E,KAAK,IAAI,CAACxB,eAAe,CAACG,WAAW,CAACkG,QAAQ,CAAC7E,KAAK,CAACC,EAAE,CAAC,CAAC,CAChE2E,MAAM,CAAC5E,KAAK,IAAI;QACf,OAAOA,KAAK,CAACwB,KAAK,CAACsD,IAAI,CAACtD,KAAK,IAAIhD,eAAe,CAACE,cAAc,CAACmG,QAAQ,CAACrD,KAAK,CAAC,CAAC;MAClF,CAAC,CAAC,CACDuD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC3D,MAAM,GAAG0D,CAAC,CAAC1D,MAAM,CAAC,CAAC,CAAC;;MAExCzC,oBAAoB,CAAC8F,eAAe,CAAC;IACvC;EACF,CAAC,EAAE,CAACnG,eAAe,EAAExB,aAAa,EAAEE,YAAY,EAAEE,cAAc,CAAC,CAAC;;EAElE;EACA,MAAM8H,aAAa,GAAIC,QAAQ,IAAK;IAClC,IAAI,CAACnG,MAAM,CAAC0F,MAAM,IAAI,CAACS,QAAQ,EAAE,OAAO,SAAS;IAEjD,OAAOA,QAAQ,CACZnE,GAAG,CAACf,EAAE,IAAI;MACT,MAAMuB,KAAK,GAAGxC,MAAM,CAACiF,IAAI,CAACmB,CAAC,IAAIA,CAAC,CAACnF,EAAE,KAAKA,EAAE,CAAC;MAC3C,OAAOuB,KAAK,GAAGA,KAAK,CAACX,IAAI,GAAG,IAAI;IAClC,CAAC,CAAC,CACD+D,MAAM,CAACS,OAAO,CAAC,CACfC,IAAI,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,QAAOrG,SAAS;MACd,KAAK,QAAQ;QACX,OAAOhC,YAAY;MACrB,KAAK,UAAU;QACb,OAAOE,cAAc;MACvB,KAAK,SAAS;MACd;QACE,OAAOJ,aAAa;IACxB;EACF,CAAC;;EAED;EACA,MAAMwI,UAAU,GAAI3D,OAAO,IAAK;IAC9B,MAAMC,IAAI,GAAG9D,QAAQ,CAAC6D,OAAO,CAAC;IAE9B,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC4C,MAAM,KAAK,CAAC,EAAE;MAC9B,oBAAOpI,OAAA;QAAGmJ,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC9D;IAEA,oBACExJ,OAAA;MAAKmJ,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpJ,OAAA;QAAKmJ,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpJ,OAAA,CAACT,MAAM;UAAC4J,SAAS,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,SAClC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNxJ,OAAA;QAAKmJ,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvB5D,IAAI,CAACd,GAAG,CAACgB,KAAK,iBACb1F,OAAA;UAAoBmJ,SAAS,EAAC,WAAW;UAAAC,QAAA,GACtC1D,KAAK,CAACnB,IAAI,EAAC,GAAC,EAACmB,KAAK,CAACC,SAAS,iBAAI3F,OAAA;YAAMmJ,SAAS,EAAC,gBAAgB;YAAAC,QAAA,GAAC,KAAG,EAAC1D,KAAK,CAACC,SAAS;UAAA;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GADrF9D,KAAK,CAAC/B,EAAE;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAI,CAAC7H,aAAa,EAAE,OAAO,IAAI;IAE/B,oBACE5B,OAAA;MAAKmJ,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCpJ,OAAA;QAAKmJ,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpCpJ,OAAA;UAAQmJ,SAAS,EAAC,aAAa;UAACO,OAAO,EAAEjD,iBAAkB;UAAA2C,QAAA,eACzDpJ,OAAA,CAACR,OAAO;YAAA6J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAER1H,YAAY,gBACX9B,OAAA,CAAAE,SAAA;UAAAkJ,QAAA,gBACEpJ,OAAA;YACEmJ,SAAS,EAAC,wBAAwB;YAClC5C,KAAK,EAAE;cACLoD,eAAe,EAAE7H,YAAY,CAAC8H,aAAa,GACvC,OAAOtJ,YAAY,GAAGwB,YAAY,CAAC8H,aAAa,GAAG,GACnD;YACN,CAAE;YAAAR,QAAA,gBAEFpJ,OAAA;cAAKmJ,SAAS,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCxJ,OAAA;cAAKmJ,SAAS,EAAC,gCAAgC;cAAAC,QAAA,EAC5CtH,YAAY,CAACuD,WAAW,gBACvBrF,OAAA;gBACE6J,GAAG,EAAE,GAAGxJ,OAAO,GAAGyB,YAAY,CAACuD,WAAW,EAAG;gBAC7CyE,GAAG,EAAEhI,YAAY,CAAC6C,KAAM;gBACxBwE,SAAS,EAAC;cAAsB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjC,CAAC,gBAEFxJ,OAAA;gBAAKmJ,SAAS,EAAC,+BAA+B;gBAAAC,QAAA,EAC3CtH,YAAY,CAAC6C;cAAK;gBAAA0E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAENxJ,OAAA;cAAKmJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnCpJ,OAAA;gBAAImJ,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,GAChCtH,YAAY,CAAC6C,KAAK,eACnB3E,OAAA;kBAAMmJ,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,GAAC,GAClC,EAACtH,YAAY,CAAC+C,YAAY,GAAG,IAAIC,IAAI,CAAChD,YAAY,CAAC+C,YAAY,CAAC,CAACE,WAAW,CAAC,CAAC,GAAG,SAAS,EAAC,GAC9F;gBAAA;kBAAAsE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eAELxJ,OAAA;gBAAKmJ,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACjCpJ,OAAA;kBAAKmJ,SAAS,EAAC,sBAAsB;kBAAAC,QAAA,gBACnCpJ,OAAA,CAACf,MAAM;oBAACkK,SAAS,EAAC;kBAAa;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,KAAC,EAAC1H,YAAY,CAACmD,YAAY,CAAC8E,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrE,CAAC,eACNxJ,OAAA;kBAAKmJ,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EACnCtH,YAAY,CAACkI,OAAO,IAAI,GAAGlI,YAAY,CAACkI,OAAO;gBAAM;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnD,CAAC,eACNxJ,OAAA;kBAAKmJ,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,gBACpCpJ,OAAA,CAACL,aAAa;oBAACwJ,SAAS,EAAC;kBAAe;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,KAAC,EAAC1H,YAAY,CAAC+C,YAAY;gBAAA;kBAAAwE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAENxJ,OAAA;gBAAKmJ,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,EAClCtH,YAAY,CAACY,MAAM,CAACgC,GAAG,CAACQ,KAAK,iBAC5BlF,OAAA;kBAAqBmJ,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EACjDlE,KAAK,CAACX;gBAAI,GADFW,KAAK,CAACvB,EAAE;kBAAA0F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEb,CACP;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENxJ,OAAA;YAAKmJ,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCpJ,OAAA;cAAKmJ,SAAS,EAAC,wBAAwB;cAAAC,QAAA,gBACrCpJ,OAAA;gBAAAoJ,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBxJ,OAAA;gBAAAoJ,QAAA,EAAItH,YAAY,CAACwD;cAAQ;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,eAGNxJ,OAAA;cAAKmJ,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjCpJ,OAAA;gBAAAoJ,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbxJ,OAAA;gBAAKmJ,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAC/B1H,QAAQ,CAACE,aAAa,CAAC+B,EAAE,CAAC,GACzBjC,QAAQ,CAACE,aAAa,CAAC+B,EAAE,CAAC,CAACe,GAAG,CAACgB,KAAK,iBAClC1F,OAAA;kBAAoBmJ,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBAC/CpJ,OAAA;oBAAKmJ,SAAS,EAAC,cAAc;oBAAAC,QAAA,EAC1B1D,KAAK,CAACE,OAAO,gBACZ5F,OAAA;sBAAK6J,GAAG,EAAEnE,KAAK,CAACE,OAAQ;sBAACkE,GAAG,EAAEpE,KAAK,CAACnB;oBAAK;sBAAA8E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,gBAE5CxJ,OAAA;sBAAKmJ,SAAS,EAAC,0BAA0B;sBAAAC,QAAA,EACtC1D,KAAK,CAACnB,IAAI,CAAC0F,SAAS,CAAC,CAAC,EAAE,CAAC;oBAAC;sBAAAZ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACxB;kBACN;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC,eACNxJ,OAAA;oBAAKmJ,SAAS,EAAC,WAAW;oBAAAC,QAAA,gBACxBpJ,OAAA;sBAAKmJ,SAAS,EAAC,WAAW;sBAAAC,QAAA,EAAE1D,KAAK,CAACnB;oBAAI;sBAAA8E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAC7CxJ,OAAA;sBAAKmJ,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,EAAE1D,KAAK,CAACC;oBAAS;sBAAA0D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpD,CAAC;gBAAA,GAbE9D,KAAK,CAAC/B,EAAE;kBAAA0F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAcb,CACN,CAAC,gBACFxJ,OAAA;kBAAAoJ,QAAA,EAAG;gBAA2B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEjC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAGNxJ,OAAA;cAAKmJ,SAAS,EAAC,yBAAyB;cAAAC,QAAA,gBACtCpJ,OAAA;gBAAAoJ,QAAA,EAAI;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACtBxH,cAAc,gBACbhC,OAAA;gBAAKmJ,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,GACjCpH,cAAc,CAACkI,QAAQ,IAAIlI,cAAc,CAACkI,QAAQ,CAAC9B,MAAM,GAAG,CAAC,gBAC5DpI,OAAA;kBAAKmJ,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/BpJ,OAAA;oBAAAoJ,QAAA,gBAAIpJ,OAAA,CAACJ,IAAI;sBAAAyJ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,WAAO;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACxBxJ,OAAA;oBAAKmJ,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,EAC5BpH,cAAc,CAACkI,QAAQ,CAACxF,GAAG,CAACyF,QAAQ,iBACnCnK,OAAA;sBAAgCmJ,SAAS,EAAC,eAAe;sBAAAC,QAAA,eACvDpJ,OAAA;wBACE6J,GAAG,EAAE,GAAGxJ,OAAO,GAAG8J,QAAQ,CAACC,SAAS,EAAG;wBACvCN,GAAG,EAAEK,QAAQ,CAACE,aAAc;wBAC5B1F,KAAK,EAAEwF,QAAQ,CAACE;sBAAc;wBAAAhB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC/B;oBAAC,GALMW,QAAQ,CAACG,WAAW;sBAAAjB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAMzB,CACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,GACJ,IAAI,EAEPxH,cAAc,CAACuI,IAAI,IAAIvI,cAAc,CAACuI,IAAI,CAACnC,MAAM,GAAG,CAAC,gBACpDpI,OAAA;kBAAKmJ,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/BpJ,OAAA;oBAAAoJ,QAAA,gBAAIpJ,OAAA,CAACP,YAAY;sBAAA4J,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,SAAK;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC9BxJ,OAAA;oBAAKmJ,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,EAC5BpH,cAAc,CAACuI,IAAI,CAAC7F,GAAG,CAACyF,QAAQ,iBAC/BnK,OAAA;sBAAgCmJ,SAAS,EAAC,eAAe;sBAAAC,QAAA,eACvDpJ,OAAA;wBACE6J,GAAG,EAAE,GAAGxJ,OAAO,GAAG8J,QAAQ,CAACC,SAAS,EAAG;wBACvCN,GAAG,EAAEK,QAAQ,CAACE,aAAc;wBAC5B1F,KAAK,EAAEwF,QAAQ,CAACE;sBAAc;wBAAAhB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC/B;oBAAC,GALMW,QAAQ,CAACG,WAAW;sBAAAjB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAMzB,CACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,GACJ,IAAI,EAEPxH,cAAc,CAACwI,GAAG,IAAIxI,cAAc,CAACwI,GAAG,CAACpC,MAAM,GAAG,CAAC,gBAClDpI,OAAA;kBAAKmJ,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/BpJ,OAAA;oBAAAoJ,QAAA,gBAAIpJ,OAAA,CAACP,YAAY;sBAAA4J,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,QAAI;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC7BxJ,OAAA;oBAAKmJ,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,EAC5BpH,cAAc,CAACwI,GAAG,CAAC9F,GAAG,CAACyF,QAAQ,iBAC9BnK,OAAA;sBAAgCmJ,SAAS,EAAC,eAAe;sBAAAC,QAAA,eACvDpJ,OAAA;wBACE6J,GAAG,EAAE,GAAGxJ,OAAO,GAAG8J,QAAQ,CAACC,SAAS,EAAG;wBACvCN,GAAG,EAAEK,QAAQ,CAACE,aAAc;wBAC5B1F,KAAK,EAAEwF,QAAQ,CAACE;sBAAc;wBAAAhB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC/B;oBAAC,GALMW,QAAQ,CAACG,WAAW;sBAAAjB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAMzB,CACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,GACJ,IAAI,EAEP,CAAC,CAACxH,cAAc,CAACkI,QAAQ,IAAIlI,cAAc,CAACkI,QAAQ,CAAC9B,MAAM,KAAK,CAAC,MAChE,CAACpG,cAAc,CAACuI,IAAI,IAAIvI,cAAc,CAACuI,IAAI,CAACnC,MAAM,KAAK,CAAC,CAAC,KACzD,CAACpG,cAAc,CAACwI,GAAG,IAAIxI,cAAc,CAACwI,GAAG,CAACpC,MAAM,KAAK,CAAC,CAAC,gBACvDpI,OAAA;kBAAAoJ,QAAA,EAAG;gBAAkD;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,GACvD,IAAI,EAEPxH,cAAc,CAACyI,IAAI,gBAClBzK,OAAA;kBACE0K,IAAI,EAAE1I,cAAc,CAACyI,IAAK;kBAC1BxG,MAAM,EAAC,QAAQ;kBACf0G,GAAG,EAAC,qBAAqB;kBACzBxB,SAAS,EAAC,eAAe;kBAAAC,QAAA,gBAEzBpJ,OAAA,CAACN,MAAM;oBAAA2J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,2BACZ;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,GACF,IAAI;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,gBAENxJ,OAAA;gBAAAoJ,QAAA,EAAG;cAAwB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAC/B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAGNxJ,OAAA;cAAKmJ,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eACpCpJ,OAAA;gBACE0J,OAAO,EAAEA,CAAA,KAAMhC,SAAS,CAAC9F,aAAa,CAAC+B,EAAE,CAAE;gBAC3CwF,SAAS,EAAE,sBAAsBjH,eAAe,CAACG,WAAW,CAACkG,QAAQ,CAAC3G,aAAa,CAAC+B,EAAE,CAAC,GAAG,OAAO,GAAG,EAAE,EAAG;gBACzGiH,QAAQ,EAAE1I,eAAe,CAACG,WAAW,CAACkG,QAAQ,CAAC3G,aAAa,CAAC+B,EAAE,CAAE;gBAAAyF,QAAA,gBAEjEpJ,OAAA,CAACd,UAAU;kBAAAmK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,KAAC,EAACtH,eAAe,CAACG,WAAW,CAACkG,QAAQ,CAAC3G,aAAa,CAAC+B,EAAE,CAAC,GAAG,OAAO,GAAG,iBAAiB;cAAA;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9F;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,eACN,CAAC,gBAEHxJ,OAAA;UAAKmJ,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eACpCpJ,OAAA;YAAAoJ,QAAA,EAAG;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,IAAIxI,OAAO,IAAI,CAACQ,WAAW,EAAE,oBAAOxB,OAAA;IAAKmJ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAAC,gBAAc,eAAApJ,OAAA;MAAAoJ,QAAA,EAAM;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAAAxJ,OAAA;MAAAoJ,QAAA,EAAM;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAAAxJ,OAAA;MAAAoJ,QAAA,EAAM;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACtI,IAAItI,KAAK,EAAE,oBAAOlB,OAAA;IAAKmJ,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAAElI;EAAK;IAAAmI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEjE,oBACExJ,OAAA;IAAKmJ,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBpJ,OAAA;MAAKmJ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BpJ,OAAA;QAAKmJ,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BpJ,OAAA;UAAKmJ,SAAS,EAAC,aAAa;UAACO,OAAO,EAAEA,CAAA,KAAMjJ,QAAQ,CAAC,OAAO,CAAE;UAAA2I,QAAA,gBAC5DpJ,OAAA,CAAChB,WAAW;YAAAqK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACfxJ,OAAA;YAAAoJ,QAAA,EAAM;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eAENxJ,OAAA;UAAImJ,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEhDxJ,OAAA;UAAKmJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAE5BpJ,OAAA;YAAKmJ,SAAS,EAAC,kBAAkB;YAAAC,QAAA,eAC/BpJ,OAAA;cAAKmJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnCpJ,OAAA,CAACH,QAAQ;gBAACsJ,SAAS,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACpCxJ,OAAA;gBACE6K,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,sBAAsB;gBAClC9G,KAAK,EAAE5C,WAAY;gBACnB2J,QAAQ,EAAEjH,kBAAmB;gBAC7BqF,SAAS,EAAC;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,EACDpI,WAAW,iBACVpB,OAAA;gBAAQmJ,SAAS,EAAC,cAAc;gBAACO,OAAO,EAAErF,WAAY;gBAAA+E,QAAA,eACpDpJ,OAAA,CAACR,OAAO;kBAAA6J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNxJ,OAAA;YAAKmJ,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BpJ,OAAA,CAACX,QAAQ;cAAC8J,SAAS,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACpCxJ,OAAA;cACEgE,KAAK,EAAExB,aAAc;cACrBuI,QAAQ,EAAGhH,CAAC,IAAKtB,gBAAgB,CAACuI,MAAM,CAACjH,CAAC,CAACE,MAAM,CAACD,KAAK,CAAC,CAAE;cAC1DmF,SAAS,EAAC,cAAc;cAAAC,QAAA,EAEvB1G,MAAM,CAACgC,GAAG,CAACQ,KAAK,iBACflF,OAAA;gBAAuBgE,KAAK,EAAEkB,KAAK,CAACvB,EAAG;gBAAAyF,QAAA,EAAElE,KAAK,CAACX;cAAI,GAAtCW,KAAK,CAACvB,EAAE;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAuC,CAC7D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGLhI,WAAW,iBACVxB,OAAA;QAAKmJ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BpJ,OAAA;UAAImJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC3BpJ,OAAA,CAACH,QAAQ;YAACsJ,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACpClI,aAAa,CAAC8G,MAAM,GAAG,CAAC,GACvB,uBAAuBhH,WAAW,MAAME,aAAa,CAAC8G,MAAM,GAAG,GAC/D,yBAAyBhH,WAAW,GAAG;QAAA;UAAAiI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACLxJ,OAAA;UAAKmJ,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxB9H,aAAa,CAACoD,GAAG,CAAChB,KAAK,iBACtB1D,OAAA;YAAgCmJ,SAAS,EAAC,YAAY;YAACO,OAAO,EAAEA,CAAA,KAAMtD,gBAAgB,CAAC1C,KAAK,CAAE;YAAA0F,QAAA,gBAC5FpJ,OAAA;cAAKmJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnCpJ,OAAA,CAACF,WAAW;gBAACmL,SAAS,EAAEvH,KAAK,CAAC0B,MAAO;gBAACT,KAAK,EAAEjB,KAAK,CAACiB;cAAM;gBAAA0E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5DxJ,OAAA;gBAAKmJ,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,eACnCpJ,OAAA;kBAAKmJ,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,gBAClCpJ,OAAA,CAACf,MAAM;oBAAAoK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,KAAC,EAAC9F,KAAK,CAACsB,MAAM,CAAC+E,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNxJ,OAAA;cAAKmJ,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBpJ,OAAA;gBAAImJ,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,GAAE1F,KAAK,CAACiB,KAAK,EAAC,GAAC,eAAA3E,OAAA;kBAAMmJ,SAAS,EAAC,YAAY;kBAAAC,QAAA,GAAC,GAAC,EAAC1F,KAAK,CAACkB,IAAI,EAAC,GAAC;gBAAA;kBAAAyE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtGxJ,OAAA;gBAAGmJ,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAER,aAAa,CAAClF,KAAK,CAACwB,KAAK;cAAC;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAC3DN,UAAU,CAACxF,KAAK,CAACC,EAAE,CAAC;YAAA;cAAA0F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC;UAAA,GAbE,UAAU9F,KAAK,CAACC,EAAE,EAAE;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAczB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAGA,CAAChI,WAAW,IAAIc,iBAAiB,CAAC8F,MAAM,GAAG,CAAC,iBAC3CpI,OAAA;QAAKmJ,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCpJ,OAAA;UAAImJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC3BpJ,OAAA,CAACV,OAAO;YAAC6J,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,uBAEtC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLxJ,OAAA;UAAKmJ,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxB9G,iBAAiB,CAACmD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACf,GAAG,CAAChB,KAAK,iBACtC1D,OAAA;YAA6BmJ,SAAS,EAAC,YAAY;YAACO,OAAO,EAAEA,CAAA,KAAMtD,gBAAgB,CAAC1C,KAAK,CAAE;YAAA0F,QAAA,gBACzFpJ,OAAA;cAAKmJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnCpJ,OAAA,CAACF,WAAW;gBAACmL,SAAS,EAAEvH,KAAK,CAAC0B,MAAO;gBAACT,KAAK,EAAEjB,KAAK,CAACiB;cAAM;gBAAA0E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5DxJ,OAAA;gBAAKmJ,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,eACnCpJ,OAAA;kBAAKmJ,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,gBAClCpJ,OAAA,CAACf,MAAM;oBAAAoK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,KAAC,EAAC9F,KAAK,CAACsB,MAAM,CAAC+E,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNxJ,OAAA;cAAKmJ,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBpJ,OAAA;gBAAImJ,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,GAAE1F,KAAK,CAACiB,KAAK,EAAC,GAAC,eAAA3E,OAAA;kBAAMmJ,SAAS,EAAC,YAAY;kBAAAC,QAAA,GAAC,GAAC,EAAC1F,KAAK,CAACkB,IAAI,EAAC,GAAC;gBAAA;kBAAAyE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtGxJ,OAAA;gBAAGmJ,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAER,aAAa,CAAClF,KAAK,CAACwB,KAAK;cAAC;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAC3DN,UAAU,CAACxF,KAAK,CAACC,EAAE,CAAC;YAAA;cAAA0F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC;UAAA,GAbE,OAAO9F,KAAK,CAACC,EAAE,EAAE;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OActB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAGA,CAAChI,WAAW,iBACXxB,OAAA,CAAAE,SAAA;QAAAkJ,QAAA,gBACEpJ,OAAA;UAAKmJ,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBpJ,OAAA;YACEmJ,SAAS,EAAE,cAAcvG,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;YACnE8G,OAAO,EAAEA,CAAA,KAAM7G,YAAY,CAAC,SAAS,CAAE;YAAAuG,QAAA,gBAEvCpJ,OAAA,CAACZ,MAAM;cAAC+J,SAAS,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,YACjC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxJ,OAAA;YACEmJ,SAAS,EAAE,cAAcvG,SAAS,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;YAClE8G,OAAO,EAAEA,CAAA,KAAM7G,YAAY,CAAC,QAAQ,CAAE;YAAAuG,QAAA,gBAEtCpJ,OAAA,CAACb,OAAO;cAACgK,SAAS,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,oBAClC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxJ,OAAA;YACEmJ,SAAS,EAAE,cAAcvG,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;YACpE8G,OAAO,EAAEA,CAAA,KAAM7G,YAAY,CAAC,UAAU,CAAE;YAAAuG,QAAA,gBAExCpJ,OAAA,CAACf,MAAM;cAACkK,SAAS,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,cACjC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGNxJ,OAAA;UAAKmJ,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBH,gBAAgB,CAAC,CAAC,CAACvE,GAAG,CAAChB,KAAK,iBAC3B1D,OAAA;YAAoBmJ,SAAS,EAAC,YAAY;YAACO,OAAO,EAAEA,CAAA,KAAMtD,gBAAgB,CAAC1C,KAAK,CAAE;YAAA0F,QAAA,gBAChFpJ,OAAA;cAAKmJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnCpJ,OAAA,CAACF,WAAW;gBAACmL,SAAS,EAAEvH,KAAK,CAAC0B,MAAO;gBAACT,KAAK,EAAEjB,KAAK,CAACiB;cAAM;gBAAA0E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5DxJ,OAAA;gBAAKmJ,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,eACnCpJ,OAAA;kBAAKmJ,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,gBAClCpJ,OAAA,CAACf,MAAM;oBAAAoK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,KAAC,EAAC9F,KAAK,CAACsB,MAAM,CAAC+E,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNxJ,OAAA;cAAKmJ,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBpJ,OAAA;gBAAImJ,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,GAAE1F,KAAK,CAACiB,KAAK,EAAC,GAAC,eAAA3E,OAAA;kBAAMmJ,SAAS,EAAC,YAAY;kBAAAC,QAAA,GAAC,GAAC,EAAC1F,KAAK,CAACkB,IAAI,EAAC,GAAC;gBAAA;kBAAAyE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtGxJ,OAAA;gBAAGmJ,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAER,aAAa,CAAClF,KAAK,CAACwB,KAAK;cAAC;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAC3DN,UAAU,CAACxF,KAAK,CAACC,EAAE,CAAC;YAAA;cAAA0F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC;UAAA,GAbE9F,KAAK,CAACC,EAAE;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcb,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGLC,uBAAuB,CAAC,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAAChJ,EAAA,CAptBID,SAAS;EAAA,QACIxB,WAAW;AAAA;AAAAmM,EAAA,GADxB3K,SAAS;AAstBf,eAAeA,SAAS;AAAC,IAAA2K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}